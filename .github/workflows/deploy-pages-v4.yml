name: Auto Update French News â€“ v4

on:
  # schedule:
  #   - cron:  '0 * * * *'  # TEMPORARILY DISABLED - API issues
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: better-french-v4-pipeline
  cancel-in-progress: false  # Don't cancel running workflows

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      BF_PER_RUN_CAP: 10
      BF_DAILY_CAP: 9999
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      AI_ENGINE_HIGH_MODEL: openai/gpt-4o-mini

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -e ./ai_engine_v3
          pip install -e ./ai_engine_v4

      - name: Run fast v3 pipeline
        run: |
          python -m ai_engine_v3.scripts.fetch_news
          python -m ai_engine_v3.scripts.qualify_news

      - name: Reset v4 pending store
        run: rm -f ai_engine_v4/data/live/pending_articles.json

      - name: Copy data into v4 store
        run: |
          rsync -a ai_engine_v3/data/ ai_engine_v4/data/
          rsync -a ai_engine_v3/website/ ai_engine_v4/website/

      # V4 processes ONLY the articles that V3 just processed in this run
      - name: Identify V3's new articles from this run
        run: |
          python - <<'PY'
          import json, pathlib, datetime
          
          # Find articles that V3 just processed (from this run)
          # These are articles with recent processed_at timestamp
          now = datetime.datetime.utcnow()
          run_start_threshold = (now - datetime.timedelta(minutes=30)).isoformat()
          
          pending_path = pathlib.Path('ai_engine_v4/data/live/pending_articles.json')
          if pending_path.exists():
              data = json.loads(pending_path.read_text('utf-8'))
              articles = data.get('articles', data)
              
              # Filter to only articles V3 processed in this run (last 30 minutes)
              new_articles = [
                  a for a in articles 
                  if a.get('processed_at', '') >= run_start_threshold
              ]
              
              pending_path.write_text(json.dumps({'articles': new_articles}, ensure_ascii=False, indent=2))
              print(f"âœ… V4 will process {len(new_articles)} articles that V3 just processed")
              print(f"   (Articles processed since: {run_start_threshold})")
          PY

      - name: Run high-tier verifier (v4)
        run: |
          set -e  # Exit on any error
          PYTHONPATH="$GITHUB_WORKSPACE" python scripts/verify_news.py
          # Verify that at least some articles were processed
          if ! grep -q '"quality_checked": true' ai_engine_v4/data/live/pending_articles.json 2>/dev/null; then
            echo "ERROR: No articles were verified! Verifier may have failed."
            exit 1
          fi
          echo "âœ… Verification completed successfully"

      - name: Force cache-busting update
        run: |
          echo "ðŸ”„ Updating cache-busting timestamps..."
          python scripts/auto_cache_bust.py
          echo "âœ… Cache-busting updated - website will force fresh content!"

      - name: Commit & push data changes
        run: |
          git config --global user.email "bot@betterfrench.io"
          git config --global user.name "BetterFrenchBot"
          git config --global core.hooksPath /dev/null
          git add ai_engine_v4/data ai_engine_v4/website || true
          if ! git diff --cached --quiet; then
            git commit -m "chore(v4): auto-update with verification" --no-verify
            git push
          fi

      # Deploy ONLY to /v4-site/ (don't touch root site)
      - name: Deploy V4 Enhanced Site ðŸš€
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./ai_engine_v4/website
          destination_dir: v4-site
          force_orphan: false
          commit_message: 'chore(deploy): update v4 enhanced site with verified articles' 