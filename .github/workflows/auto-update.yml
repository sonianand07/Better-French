name: Auto Update French News

on:
  schedule:
    - cron: '0 6,8,10,12,14,16,18,20 * * *'   # DAYTIME ONLY: 8AM-10PM Paris time, NO NIGHT PROCESSING
  workflow_dispatch:         # Allow manual trigger

permissions:
  contents: write            # Allow writing to repository
  actions: read              # Allow reading actions

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up OpenRouter API key
        run: echo "OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}" >> $GITHUB_ENV

      - name: Run Scheduler
        run: |
          python scripts/scheduler_main.py --once

      - name: Quality Repair â€“ contextual explanations
        run: |
          python scripts/quality_repair.py

      - name: Create Rolling 100 Articles Collection
        run: |
          python scripts/rolling_articles_manager.py

      - name: Ensure today\'s daily note exists
        run: |
          python - <<'PY'
          from scripts.note_logger import log_task
          log_task("workflow run", "Initialised daily note", status="noop")
          PY

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add data/live/raw_articles_*.json data/live/curated_articles_*.json Project-Better-French-Website/rolling_articles.json Project-Better-French-Website/rolling_articles_backup.json logs/*.json || true
          if ! git diff --cached --quiet; then
            git commit -m "ðŸ¤– Auto-update: Fresh French articles and daily reports"
            git push
          else
            echo "No changes to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 